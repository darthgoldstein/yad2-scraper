interface RentalFeedItem {
  line_1: string;
  line_2: string;
  line_3: string;
  row_1: string | string[];
  row_2: string;
  row_3: string | string[];
  row_4: string | string[];
  row_5: string | string[];
  search_text: string;
  title_1: string;
  title_2: string;
  images: string;
  images_count: string;
  img_url: string;
  images_urls: string;
  mp4_video_url: string;
  video_url: string;
  PrimaryArea: string;
  PrimaryAreaID: string;
  AreaID_text: string;
  SecondaryArea: string;
  area_id: number;
  city: string;
  city_code: number;
  street: string;
  coordinates: { latitude: number; longitude: number };
  geohash: string;
  ad_highlight_type: string;
  background_color: string;
  highlight_text: string;
  order_type_id: number;
  ad_number: number;
  cat_id: string;
  customer_id: number;
  feed_source: string;
  id: string;
  link_token: string;
  merchant: boolean;
  contact_name: string;
  merchant_name: string;
  record_id: number;
  subcat_id: string;
  currency: string;
  currency_text: string;
  price: string;
  deal_info: null;
  date: string;
  date_added: string;
  updated_at: string;
  IsVisibleForReco: boolean;
  ad_type: string;
  can_change_layout: 0 | 1;
  can_hide: 0 | 1;
  default_layout: string;
  external: string;
  is_hidden: 0 | 1;
  is_liked: 0 | 1;
  is_trade_in_button: boolean;
  like_count: number;
  line_1_text_color: string;
  line_2_text_color: string;
  promotional_ad: number;
  remove_on_unlike: boolean;
  type: string;
  uid: string;
  address_more: string;
  broker_avatar: string;
  hood_id: number;
  office_about: string;
  office_logo_url: string;
  square_meters: number;
  HomeTypeID_text: string;
  neighborhood: string;
  AssetClassificationID_text: string;
  Rooms_text: number;
  abovePrice: string;
}

interface RentalItemDetails {
  HouseCommittee: string;
  TotalFloor_text: number;
  ad_highlight_type: string;
  ad_number: number;
  additional_info_items_v2: {
    key: string;
    value: boolean;
    title: string;
    popup_text: string;
  }[];
  additional_info_title: string;
  address_home_number: string;
  agency_info: null;
  area_id: number;
  balconies: number;
  button_bar: {
    bar_state: string;
    items: {
      key: string;
      is_menu: boolean;
      menu_items: null | { title: string; link: string; event: string }[];
      event: string;
      link: string;
      title?: string;
    }[];
  };
  can_hide: boolean;
  cat_id: string;
  city_code: string;
  city_text: string;
  contact_name: string;
  customer_id: number;
  date: string;
  date_added: string;
  date_of_entry: string;
  date_raw: string;
  educational_info: any[];
  email: boolean;
  entrance_text: string;
  fair_rent: number;
  furniture_info: string;
  garden_area: number;
  highlight_text: string;
  hood_id: number;
  id: string;
  images: string[];
  images_urls: string[];
  important_info_items: {
    key: string;
    value: string;
    link_url?: string;
  }[];
  important_info_title: string;
  info_bar_items: {
    key: string;
    title: string;
    label: string;
    titleWithoutLabel: string;
  }[];
  info_text: string;
  info_title: string;
  is_liked: null;
  item_type: string;
  like_count: number;
  link_token: string;
  main_title: string;
  main_title_params: string[];
  merchant: string;
  navigation_data: {
    coordinates: {
      latitude: string;
      longitude: string;
    };
    zoom: number;
    pov: null;
  };
  navigation_links: {
    map: {
      link_title: string;
      map_data: {
        view_type: string;
        header_info: {
          profile_image: string;
          main_title: string;
          second_title: string;
        };
        coordinates: {
          latitude: string;
          longitude: string;
        };
        zoom: number;
      };
    };
  };
  neighborhood: string;
  note_text: null;
  order_type_id: number;
  parking: string;
  payments_in_year: number;
  price: string;
  pricelist_link_title: string;
  pricelist_link_url: string;
  property_tax: string;
  record_id: number;
  second_title: string;
  shelter: string;
  square_meter_build: number;
  square_meters: number;
  street: string;
  subcat_id: string;
  submit_error_link: boolean;
  type: string;
  uid: string;
  updated_at: string;
  video_url: string;
  media: {
    zone: string;
    layout: string;
    params: {
      CityID: string;
      yad1City: string;
      HomeTypeID: number;
      AssetType: string;
      fromRooms: number;
      untilRooms: number;
      fromPrice: number;
      untilPrice: number;
      FromFloor: number;
      ToFloor: number;
      FromSquareMeter: number;
      ToSquareMeter: number;
      SecondaryAreaID: number;
      PrimaryAreaID: number;
      SecondaryArea: string;
      PrimaryArea: string;
      searchB144FromYad2: string;
      tivuch: string;
      artiMedia_iscroll_group: string;
      abovePrice: string;
      AppType: string;
      mainpage: string;
      measurements: string;
      merchant: string;
      catID: number;
      subCatID: number;
      current_zone: string;
      location: string;
      pageType: string;
      mainCategoryZones: Record<number, string>;
      zonePrefix: string;
      version: string;
      Cohort: string;
      userid: string;
      isOffice: number;
    };
    artiMedia_iscroll_group: string;
    locations: [];
    lightboxLocations: null;
  };
  is_business: false;
  favorites_userid: string;
  HomeTypeID: number;
  ad_number_second: string;
  ad_item_from_memcache: string;
  categoryDic: {
    catEn: string;
    subCatEn: string;
  };
  yad1Ads: any[];
  agency_more_items: any[];
  pricelist_articles: any[];
  rating_area: [];
  education_info_details: any[];
  education_level: any[];
  busInfo: any[];
  demography: any[];
  companyAdsPromotions: any[];
}

interface Rental {
  id: string;
  arnona: number;
  vadBayit: number;
  squareMeters: number;
  rooms: number;
  floor: number;
  price: number;
  postDate: string;
  entranceDate: string;
  updatedDate: string;
  street: string;
  houseNumber: string;
  city: string;
  rentalType: string;
  url: string;
}

type FilterNameEnum = typeof import('../lib/enums').FilterName;
type FilterName = FilterNameEnum[keyof FilterNameEnum];
type Filters = Record<FilterName, number>;